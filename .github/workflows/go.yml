name: Go
on: [push, pull_request]

jobs:

  lint:    
    runs-on: ubuntu-latest
    steps:    
      - uses: actions/checkout@v2
      - uses: golangci/golangci-lint-action@v2      
      
  build:    
    runs-on: ubuntu-latest
    steps:
      - uses: actions/setup-go@v2
      - uses: actions/checkout@v2
      - uses: actions/cache@v2
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: ${{ runner.os }}-go-
      - run: go get -v -t -d -u          
      - if: steps.cache.outputs.cache-hit != 'true'
        run: go mod download
      - run: CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build -o MixerboxSync -v
      - uses: montudor/action-zip@v0.1.0
        with:
          args: zip -9 MixerboxSync_Linux_x64.zip MixerboxSync
      - run: CGO_ENABLED=0 GOOS=windows GOARCH=amd64 go build -o MixerboxSync.exe -v
      - uses: montudor/action-zip@v0.1.0
        with:
          args: zip -9 MixerboxSync_Windows_x64.zip MixerboxSync.exe      
      - run: CGO_ENABLED=0 GOOS=darwin GOARCH=amd64 go build -o MixerboxSync -v
      - uses: montudor/action-zip@v0.1.0
        with:
          args: zip -9 MixerboxSync_MacOS_x64.zip MixerboxSync
      - uses: actions/upload-artifact@v2
        with:
          path: |
            MixerboxSync_Linux_x64.zip
            MixerboxSync_Windows_x64.zip
            MixerboxSync_MacOS_x64.zip
      
  test:    
    runs-on: ubuntu-latest
    steps:
      - uses: actions/setup-go@v2
      - uses: actions/checkout@v2
      - uses: actions/cache@v2
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-
      - run: go get -v -t -d -u          
      - if: steps.cache.outputs.cache-hit != 'true'
        run: go mod download    
      - run: go test -gcflags -l -v -coverprofile coverage.txt -covermode=atomic
      - uses: codecov/codecov-action@v1
  
  release:
    if: contains(github.ref, 'tags/v')
    needs: [lint, build, test]
    runs-on: ubuntu-latest
    steps:
      - id: create_release
        uses: actions/create-release@v1.1.4
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: ${{ github.ref }}
      - uses: actions/download-artifact@v2.0.5
      - uses: montudor/action-zip@v0.1.0
        with:
          args: unzip artifact.zip
      - uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./MixerboxSync_Linux_x64.zip
          asset_name: MixerboxSync_Linux_x64.zip
          asset_content_type: application/zip
      - uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./MixerboxSync_Windows_x64.zip
          asset_name: MixerboxSync_Windows_x64.zip
          asset_content_type: application/zip
      - uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./MixerboxSync_MacOS_x64.zip
          asset_name: MixerboxSync_MacOS_x64.zip
          asset_content_type: application/zip
